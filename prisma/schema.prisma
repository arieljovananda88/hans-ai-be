generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HealthCheck {
  id      Int    @id @default(autoincrement())
  Message String
}

model Users {
  id               String             @id @default(uuid())
  displayName      String
  email            String             @unique
  password         String
  allergies        String
  GeneratedRecipes GeneratedRecipes[]
  MealLogs         MealLogs[]
  NutritionPlans   NutritionPlans[]
  PantryItems      PantryItems[]
  WeightLogs       WeightLogs[]
  SavedRecipe      SavedRecipes[]
}

model PantryItems {
  id             String   @id @default(uuid())
  userId         String
  itemName       String
  quantity       Int
  expirationDate DateTime @default(now())
  user           Users    @relation(fields: [userId], references: [id])
}

model NutritionPlans {
  id               String             @id @default(uuid())
  userId           String
  caloriesGoal     Float
  startDate        DateTime
  endDate          DateTime
  user             Users              @relation(fields: [userId], references: [id])
  GeneratedRecipes GeneratedRecipes[]
}

model MealLogs {
  id       String   @id @default(uuid())
  userId   String
  date     DateTime
  mealType String
  calories Float
  user     Users    @relation(fields: [userId], references: [id])
}

model WeightLogs {
  id     String   @id @default(uuid())
  userId String
  date   DateTime
  weight Float
  user   Users    @relation(fields: [userId], references: [id])
}

model GeneratedRecipes {
  id                    String         @id @default(uuid())
  userId                String
  recipeId              String
  generatedDate         DateTime
  ingredientAdjustments String
  recipe                NutritionPlans @relation(fields: [recipeId], references: [id])
  user                  Users          @relation(fields: [userId], references: [id])
}

model Recipes {
  id           String @id @default(uuid())
  name         String
  ingredients  String
  instructions String
  calories     Float
  dietaryTags  String
  SavedRecipe  SavedRecipes[]
}

model SavedRecipes {
  id        String   @id @default(uuid())
  userId    String
  recipeId  String
  user      Users    @relation(fields: [userId], references: [id])
  recipe    Recipes  @relation(fields: [recipeId], references: [id])
}
